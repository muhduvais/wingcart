<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WingCart | <%= user.fname %></title>
    <link rel="stylesheet" href="/static/css/profileStyle.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Plugins CSS File -->
    <link rel="stylesheet" href="/static/css/bootstrap.min.css">
    <link rel="stylesheet" href="/static/css/plugins/owl-carousel/owl.carousel.css">
    <link rel="stylesheet" href="/static/css/plugins/magnific-popup/magnific-popup.css">
    <link rel="stylesheet" href="/static/css/plugins/jquery.countdown.css">
    <!-- Main CSS File -->
    <link rel="stylesheet" href="/static/css/style1.css">
    <link rel="stylesheet" href="/static/css/style.css">
    <link rel="stylesheet" href="/static/css/skins/skin-demo-3.css">
    <link rel="stylesheet" href="/static/css/demos/demo-3.css">
    <!-- Font awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />

    <style>
        .wallet-card {
            background-color: #ffffff;
            border-radius: 15px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
            margin: 20px 0;
            border: 1px solid #dee2e6;
        }
        .wallet-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid #dee2e6;
            padding-bottom: 15px;
            margin-bottom: 15px;
        }
        .wallet-balance {
            font-size: 1.5em;
            font-weight: bold;
        }
        .wallet-info {
            font-size: 1.2em;
        }
        .wallet-details p {
            margin: 0;
        }

        .table-rounded {
        border-radius: 0.5rem;
        overflow: hidden;
        }
        .table-rounded tbody tr:last-child td {
            border-radius: 0 0 0.5rem 0.5rem;
        }
    </style>
</head>

<body>
    <header class="header header-intro-clearance header-3">
        <div class="header-middle">
            <div class="container">
                <div class="header-left">
                    <button class="mobile-menu-toggler">
                        <span class="sr-only">Toggle mobile menu</span>
                        <i class="icon-bars"></i>
                    </button>
                    
                    <a href="#" class="logo">
                        <h3 class="text-primary">WingCart</h3>
                    </a>
                </div><!-- End .header-left -->

                <nav class="main-nav">
                    <ul class="menu sf-arrows">
                        <li class="megamenu-container active">
                            <a href="/" class="text-white">Home</a>
                        </li>
                        <li>
                            <a href="/shop" class="sf-with-ul text-white">Shop</a>
                        </li>
                        <li>
                            <a href="#" class="sf-with-ul text-white">About</a>
                        </li>
                        <li>
                            <a href="#" class="sf-with-ul text-white">Contact</a>
                        </li>
                    </ul><!-- End .menu -->
                </nav><!-- End .main-nav -->

                <!-- Header-right -->
                <div class="header-right">
                    <div class="wishlist">
                        <a href="/wishlist" title="Wishlist">
                            <div class="icon">
                                <i class="icon-heart-o"></i>
                                <span class="wishlist-count badge">0</span>
                            </div>
                            <p>Wishlist</p>
                        </a>
                    </div><!-- End .compare-dropdown -->

                    <div class="wishlist">
                        <a href="/cartManagement" title="cart">
                            <div class="icon">
                                <i class="icon-shopping-cart"></i>
                                <span class="wishlist-count badge">0</span>
                            </div>
                            <p>Cart</p>
                        </a>
                    </div><!-- End .compare-dropdown -->
                </div><!-- End .header-right -->
            </div><!-- End .container -->
        </div><!-- End .header-middle -->
    </header><!-- End .header -->

    <div class="container light-style flex-grow-1 container-p-y">
        <h4 class="font-weight-bold py-3 mb-4">
            Account settings
        </h4>
        <div class="user-header py-3">
            <h5><span><i class="fa-solid fa-user pr-2"></i></span> <%= user.fname %> <%= user.lname %></h5>
        </div>
        <div class="card overflow-hidden">
            <div class="row no-gutters row-bordered row-border-light">
                <div class="col-md-3 pt-0">
                    <div class="list-group list-group-flush account-settings-links">
                        <a class="list-group-item list-group-item-action active" href="/userProfile">General</a>
                        <a class="list-group-item list-group-item-action" href="/changePassword">Change password</a>
                        <a class="list-group-item list-group-item-action" href="/addressManagement">Manage Addresses</a>
                        <a class="list-group-item list-group-item-action" href="/wishlist">Wishlist</a>
                        <a class="list-group-item list-group-item-action" href="/orderHistory">Order History</a>
                        <a class="list-group-item list-group-item-action" href="/wallet">Wallet</a>
                    </div>
                </div>
                <div class="col-md-9">
                    <div class="tab-content">
                        <div class="tab-pane fade active show" id="account-general">
                            <!-- Wallet Card -->
                            <div class="container">
                                <div class="row">
                                    <div class="col-lg-4 col-md-6 col-sm-12">
                                        <div class="wallet-card">
                                            <div class="wallet-header">
                                                <div class="wallet-info">
                                                    <span id="username"><%= locals.user ? user.fname + ' ' + user.lname : '' %></span>
                                                </div>
                                                <div class="wallet-balance">
                                                    <span id="balance" class="text-success">₹<%= locals.wallet ? wallet.balance.toFixed(2) : '0' %></span>
                                                </div>
                                            </div>
                                            <div class="wallet-details">
                                                <p>Account Number: <span id="account-number">8345448890</span></p>
                                                <% if (locals.lastTransaction) { %>
                                                    <p>Last Transaction: <span><%= lastTransaction.date.toISOString().split('T')[0] + ', ' %></span>
                                                        <span class="<%= lastTransaction.type === 'credit' ? 'text-success' : 'text-danger' %>" id="last-transaction"><%= '₹' + lastTransaction.amount %></span>
                                                        <span id="last-transaction"><%= lastTransaction.type === 'credit' ? '(Cr)' : '(Db)' %></span>
                                                    </p>
                                                <% } else { %>
                                                    <p class="text-danger"><strong>No transactions yet!</strong></p>
                                                <% } %>
                                            </div>
                                            <div class="wallet-actions my-5">
                                                <button class="btn btn-primary btn-sm flex-grow-1" data-toggle="modal" data-target="#addFundModal">Add Fund</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Add fund Modal -->
                            <div class="modal fade" id="addFundModal" tabindex="-1" role="dialog" aria-labelledby="addFundModalLabel" aria-hidden="true">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="addFundModalLabel">Add fund</h5>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">
                                            <form id="addFundForm" class="form-vertical p-5">
                                                <div class="form-group">
                                                    <label for="addAmount" class="errorMsg">Enter the amount</label>
                                                    <input id="addAmount" name="addAmount" class="form-control" type="text">
                                                </div>
                                                <button type="submit" id="addFundBtn" class="btn btn-primary">Add</button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Responsive Transactions Table -->
                            <h5 class="font-weight-bold">Transaction History</h5>
                            <table class="table table-striped mx-1 table-bordered table-rounded">
                                <thead class="thead-dark">
                                  <tr>
                                    <th class="text-center">Transaction ID</th>
                                    <th class="text-center">Date</th>
                                    <th class="text-center">Type</th>
                                    <th class="text-center">Amount</th>
                                  </tr>
                                </thead>
                                <tbody>
                                  <% if (wallet.transactions.length > 0) { %>
                                    <% wallet.transactions.forEach(transaction => { %>
                                        <tr>
                                          <td class="text-center"><%= transaction.transactionId %></td>
                                          <td class="text-center"><%= transaction.date.toISOString().split('T')[0] %></td>
                                          <td class="text-center"><%= transaction.type %></td>
                                          <td class="text-center <%= transaction.type === 'credit' ? 'text-success' : 'text-danger' %>">₹<%= transaction.amount %></td>
                                        </tr>
                                      <% }); %>
                                  <% } else { %>
                                    <p class="text-danger p-3">No transactions!</p>
                                  <% } %>
                                </tbody>
                              </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        const form = document.getElementById('addFundForm');
        form.addEventListener('submit', (event) => {
            event.preventDefault();

            validateForm();
        });

        const setError = (element, message) => {
          const formGroup = element.parentElement;
          const errorDisplay = formGroup.querySelector('.errorMsg');
      

          errorDisplay.innerText = message;
          element.classList.add('error');
          errorDisplay.classList.add('error');
          element.classList.remove('success');
          errorDisplay.classList.remove('success');

          }; 

          const setSuccess = (element, message) => {
              const formGroup = element.parentElement;
              const errorDisplay = formGroup.querySelector('.errorMsg');

          errorDisplay.innerText = message;
          element.classList.add('success');
          errorDisplay.classList.add('success');
          element.classList.remove('error');
          errorDisplay.classList.remove('error');

          };

          const validateForm = async () => {
            const amount = document.getElementById('addAmount');
            const amountValue = amount.value.trim();

            let isValid = true;

            try {
                if(!amountValue) {
                    setError(amount, "*Please enter the amount");
                    isValid = false;
                } else if (amountValue < 500) {
                    setError(amount, "*You have to add minimum 500");
                    isValid = false;
                } else if (amountValue > 50000) {
                    setError(amount, "*You cannot add more than 50000");
                    isValid = false;
                } else if (isNaN(amountValue)) {
                    setError(amount, "*Enter a valid amount");
                    isValid = false;
                }
                else {
                    setSuccess(amount, "Discount");
                }

                if(!isValid) {
                return;
                }

                const response = await fetch(`/addFund/${amountValue}`, {
                    method: "POST",
                        headers: {
                            'content-type': 'application/json'
                        },
                        // body: JSON.stringify({
                        // })
                    });

                    const data = await response.json();

                    console.log('Initiating Razorpay payment...');

                    const transactions = data.transactions;

                    if (data.success) {
                        const options = {
                            key: data.key,
                            amount: transactions.amount * 100,
                            currency: 'INR',
                            name: 'Wingcart',
                            description: 'Test Transaction',
                            image: 'https://your-logo-url.com',
                            order_id: data.razorpayOrderId,
                            handler: async function (response) {
                                console.log('Payment successful. Redirecting...');

                                try {
                                    const successResponse = await fetch(`/addFundUpdate`, {
                                        method: "PATCH",
                                        headers: {
                                            'content-type': 'application/json'
                                        },
                                        body: JSON.stringify({
                                            transactions: data.transactions
                                        })
                                    });

                                    const successData = await successResponse.json();

                                    if (successData.success) {
                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Success',
                                            text: 'Amount added successfully!',
                                        }).then(() => {
                                            location.reload();
                                        });
                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Error',
                                            text: 'Error adding amount to the wallet!',
                                        });
                                    }
                                } catch (error) {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: 'Failed to update wallet!',
                                    });
                                    console.error('Error updating wallet:', error);
                                }
                            },

                                prefill: {
                                    name: data.user.name,
                                    email: data.user.email,
                                    contact: data.user.phone
                                },
                                notes: {
                                    address: ''
                                },
                                theme: {
                                    color: '#3399cc'
                                }
                        };

                        const rzp1 = new Razorpay(options);

                        // Payment failure
                        rzp1.on('payment.failed', function (response) {
                            console.error('Payment failed:', response.error);
                            Swal.fire({
                                icon: 'info',
                                title: 'Alert',
                                text: 'Payment has failed. Please try again!'
                            })
                            .then(() => {
                                location.reload();
                            })

                        });

                        console.log('Opening Razorpay...');
                        rzp1.open();
                    }

                    // if (data.success) {
                    //     Swal.fire({
                    //         icon: 'success',
                    //         title: 'Success',
                    //         text: 'Amount added successfully!',
                    //     }).then(() => {
                    //         location.reload();
                    //     });
                    // } else if(data.isActive === false) {
                    //     window.location.href = '/userLogin'
                    // } else {
                    //     Swal.fire({
                    //         icon: 'error',
                    //         title: 'Error',
                    //         text: 'Error adding amount to the wallet!',
                    //     });
                    // }
            } catch (error) {
                console.log('Error adding fund', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Error adding amount!',
                });
            }
        }

    </script>

    <!-- Razorpay -->
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <!-- Sweet Alert -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script>
    <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.bundle.min.js"></script>
    <script type="text/javascript"></script>
</body>

</html>