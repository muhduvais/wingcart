<!DOCTYPE html>
<html lang="en">
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>Product Management</title>
    <meta
      content="width=device-width, initial-scale=1.0, shrink-to-fit=no"
      name="viewport"
    />
    <link
      rel="icon"
      href="/assets2/img/kaiadmin/  .ico"
      type="image/x-icon"
    />

    <!-- Fonts and icons -->
    <script src="/assets2/js/plugin/webfont/webfont.min.js"></script>
    <script>
      WebFont.load({
        google: { families: ["Public Sans:300,400,500,600,700"] },
        custom: {
          families: [
            "Font Awesome 5 Solid",
            "Font Awesome 5 Regular",
            "Font Awesome 5 Brands",
            "simple-line-icons",
          ],
          urls: ["/assets2/css/fonts.min.css"],
        },
        active: function () {
          sessionStorage.fonts = true;
        },
      });
    </script>

    <!-- CSS Files -->
    <link rel="stylesheet" href="/assets2/css/bootstrap.min.css" />
    <link rel="stylesheet" href="/assets2/css/plugins.min.css" />
    <link rel="stylesheet" href="/assets2/css/kaiadmin.min.css" />
    <link rel="stylesheet" href="/assets2/css/loginStyle.css" />
    <link rel="stylesheet" href="/assets2/css/adminStyle.css">
    <!-- Font-awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <!-- Sweet Alert CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

    <!-- //multiple select method -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css" />

    <style>
      input.error {
        border-color: #ff0000;
      }
      textarea.error {
        border-color: #ff0000;
      }
      label.error {
        color: #ff0000;
      }

    .container-card {
      margin-top:10px;
    }

    .content-box {
      border-radius: 20px;
      padding: 32px 20px;
      margin: 0 0 20px;
      text-align: center;
      cursor: pointer
    }



    .content-box p {
      margin: 1;
      color: #fff
    }

    .content-box h3 {
      line-height: 26px;
      padding-bottom: 8px;
      color: #fff;
      font-weight: 600
    }

    .content-box i {
      font-size: 80px;
      height: 80px;
      color: #fff;
      margin: 10px 0;
      display: block
    }

    .content-box.color-effect-1 {
      background: #38c782
    }




    .box-icon i {
      display: inline-block;
      font-size: 0;
      cursor: pointer;
      margin: 15px 0;
      width: 90px;
      height: 90px;
      border-radius: 50%;
      text-align: center;
      position: relative;
      z-index: 1;
      color: #fff
    }

    .box-icon i:after {
      pointer-events: none;
      position: absolute;
      width: 100%;
      height: 100%;
      border-radius: 50%;
      content: '';
      -webkit-box-sizing: content-box;
      -moz-box-sizing: content-box;
      box-sizing: content-box
    }

    .box-icon i:before {
      speak: none;
      font-size: 40px;
      line-height: 90px;
      font-style: normal;
      font-weight: 400;
      font-variant: normal;
      text-transform: none;
      display: block;
      -webkit-font-smoothing: antialiased
    }

    .box-icon-effect-1 .box-icon i {
      background: rgba(255, 255, 255, .2);
      color: #fff;
      -webkit-transition: background .2s, color .2s;
      -moz-transition: background .2s, color .2s;
      transition: background .2s, color .2s
    }

    .box-icon-effect-1 .box-icon i:after {
      top: -7px;
      left: -7px;
      padding: 7px;
      box-shadow: 0 0 0 4px #fff;
      -webkit-transition: -webkit-transform .2s, opacity .2s;
      -webkit-transform: scale(.8);
      -moz-transition: -moz-transform .2s, opacity .2s;
      -moz-transform: scale(.8);
      -ms-transform: scale(.8);
      transition: transform .2s, opacity .2s;
      transform: scale(.8);
      opacity: 0
    }

    .content-box:hover .box-icon-effect-1a .box-icon i {
      background: #fff;
      color: #3acf87
    }

    .content-box:hover .box-icon-effect-1a .box-icon i:after {
      -webkit-transform: scale(1);
      -moz-transform: scale(1);
      -ms-transform: scale(1);
      transform: scale(1);
      opacity: 1
    }

    .box-icon-effect-2 .box-icon i {
      box-shadow: 0 0 0 4px #fff;
      overflow: hidden;
      -webkit-transition: background .3s, color .3s, box-shadow .3s;
      -moz-transition: background .3s, color .3s, box-shadow .3s;
      transition: background .3s, color .3s, box-shadow .3s;
      color: #fff
    }

    a:link {
      text-decoration: none;
    }

    .coupon-cards-container {
        display: flex;
        overflow-x: auto;
        gap: 1rem; /* Add some space between the cards */
        padding: 1rem 0;
        scrollbar-width: thin; /* Firefox */
        scrollbar-color: #888 #e0e0e0; /* Firefox */
    }

    .coupon-cards-container::-webkit-scrollbar {
        height: 8px; /* Height of horizontal scrollbar */
    }

    .coupon-cards-container::-webkit-scrollbar-track {
        background: #e0e0e0; 
    }

    .coupon-cards-container::-webkit-scrollbar-thumb {
        background-color: #888; 
        border-radius: 10px;
    }

    .coupon-cards-container::-webkit-scrollbar-thumb:hover {
        background: #555;
    }

    .card {
        flex: 0 0 auto; /* Ensure cards don't shrink */
        width: 18rem; /* Fixed width for cards */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        overflow: hidden;
        transition: transform 0.3s ease;
    }

    .card:hover {
        transform: translateY(-5px); /* Slight lift effect on hover */
    }

    .card-body {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
    }

    .btn-success {
      background-color: #1c7b4b;
      color: #fff;
    }

    .btn-danger {
      background-color: #b90a0a;
      color: #fff;
    }
    </style>

  </head>
  <body>
    

    <div class="wrapper">
      <!-- Sidebar -->
      <div class="sidebar" data-background-color="dark">
        <div class="sidebar-logo">
          <!-- Logo Header -->
          <div class="logo-header" data-background-color="dark">
            <a href="#" class="logo">
              <h2 class="text-white fw-bold"><i class="fas fa-shopping-cart fs-4 text-secondary"></i> WingCart</h2>
            </a>
            <!-- <div class="nav-toggle">
              <button class="btn btn-toggle toggle-sidebar">
                <i class="gg-menu-right"></i>
              </button>
              <button class="btn btn-toggle sidenav-toggler">
                <i class="gg-menu-left"></i>
              </button>
            </div> -->
            <button class="topbar-toggler more">
              <i class="gg-more-vertical-alt"></i>
            </button>
          </div>
          <!-- End Logo Header -->
        </div>
        <div class="sidebar-wrapper scrollbar scrollbar-inner">
          <div class="sidebar-content">
            <ul class="nav nav-secondary">
              <li class="nav-item">
                <a href="/admin/dashboard">
                  <i class="fas fa-home"></i>
                  <p>Dashboard</p>
                </a>
              </li>
              <li class="nav-item">
                <a href="/admin/userManagement">
                  <i class="fas fa-user-cog"></i>
                  <p>User Management</p>
                </a>
              </li>
              <li class="nav-item">
                <a href="/admin/categoryManagement">
                  <i class="fas fa-layer-group"></i>
                  <p>Category Management</p>

                </a>
              </li>
              <li class="nav-item">
                <a href="/admin/productManagement">
                    <i class="fas fa-box-open"></i>
                  <p>Product Management</p>

                </a>
              </li>
              <li class="nav-item">
                <a href="/admin/orderManagement">
                    <i class="fas fa-shopping-cart"></i>
                  <p>Order Management</p>

                </a>
              </li>
              <li class="nav-item">
                <a href="#maps">
                  <i class="fas fa-sign"></i>
                  <p>Banner Management</p>

                </a>
              </li>
              <li class="nav-item active">
                <a href="/admin/offersAndCoupons">
                  <i class="fas fa-tags"></i>
                  <p>Offers & Coupons</p>

                </a>
              </li>
              <li class="nav-item">
                <a href="/admin/salesReport">
                  <i class="fas fa-chart-bar"></i>
                  <p>Sales Report</p>
                </a>
              </li>
              
            </ul>
          </div>
        </div>
      </div>
      <!-- End Sidebar -->

      <div class="main-panel">
        <div class="main-header">
          <div class="main-header-logo">
            <!-- Logo Header -->
            <div class="logo-header" data-background-color="dark">
              <a href="index.html" class="logo">
                <img
                  src="/assets2/img/kaiadmin/logo_light.svg"
                  alt="navbar brand"
                  class="navbar-brand"
                  height="20"
                />
              </a>
              <div class="nav-toggle">
                <button class="btn btn-toggle toggle-sidebar">
                  <i class="gg-menu-right"></i>
                </button>
                <button class="btn btn-toggle sidenav-toggler">
                  <i class="gg-menu-left"></i>
                </button>
              </div>
              <button class="topbar-toggler more">
                <i class="gg-more-vertical-alt"></i>
              </button>
            </div>
            <!-- End Logo Header -->
          </div>
          <!-- Navbar Header -->
          <nav
            class="navbar navbar-header navbar-header-transparent navbar-expand-lg border-bottom"
          >
            <div class="container-fluid">
              <nav
                class="navbar navbar-header-left navbar-expand-lg navbar-form nav-search p-0 d-none d-lg-flex"
              >

              <!-- Search Form -->
              <form action="">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <button type="submit" class="btn btn-search pe-1">
                            <i class="fa fa-search search-icon"></i>
                        </button>
                    </div>
                    <input
                        type="text"
                        name="search"
                        placeholder="Search ..."
                        class="form-control"
                        value="<%= locals.search ? search : '' %>"
                    />
                     <!-- Ensure current page is maintained -->
                </div>
              </form>

              <ul class="navbar-nav topbar-nav ms-md-auto align-items-center">
                <li
                  class="nav-item topbar-icon dropdown hidden-caret d-flex d-lg-none"
                >
                  <a
                    class="nav-link dropdown-toggle"
                    data-bs-toggle="dropdown"
                    href="#"
                    role="button"
                    aria-expanded="false"
                    aria-haspopup="true"
                  >
                    <i class="fa fa-search"></i>
                  </a>
                  <ul class="dropdown-menu dropdown-search animated fadeIn">
                    <form class="navbar-left navbar-form nav-search">
                      <div class="input-group">
                        <input
                          type="text"
                          placeholder="Search ..."
                          class="form-control"
                        />
                      </div>
                    </form>
                  </ul>
                </li>
                <li class="nav-item topbar-icon dropdown hidden-caret">
                  <ul
                    class="dropdown-menu messages-notif-box animated fadeIn"
                    aria-labelledby="messageDropdown"
                  >
                  </ul>
                </li>

                <li class="nav-item topbar-user dropdown hidden-caret">
                  <a
                    class="dropdown-toggle profile-pic"
                    data-bs-toggle="dropdown"
                    href="#"
                    aria-expanded="false"
                  >
                    <div class="avatar-sm">
                      <i class="fas fa-user-alt"></i>
                    </div>
                    <span class="profile-username">
                      <span class="fw-bold">Uvais</span>
                    </span>
                  </a>
                  <ul class="dropdown-menu dropdown-user animated fadeIn">
                    <div class="dropdown-user-scroll scrollbar-outer">
                      <li>
                        <div class="user-box align">
                          <div class="avatar-lg">
                            <i class="fas fa-user-alt"></i>
                          </div>
                          <div class="u-text">
                            <h4>Uvais</h4>
                            <p class="text-muted">uadmin@gmail.com</p>
                            <a
                              href="/admin/dashboard"
                              class="btn btn-xs btn-secondary btn-sm"
                              >View Profile</a
                            >
                          </div>
                        </div>
                      </li>
                      <li>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="#">My Profile</a>
                        <a class="dropdown-item" href="/admin/logout">Logout</a>
                      </li>
                    </div>
                  </ul>
                </li>
              </ul>
            </div>
          </nav>
          <!-- End Navbar -->
        </div>

        <div class="container">
          <div class="page-inner">
            <div class="page-header">
              <h4 class="page-title">Offers and Coupons</h4>
              <ul class="breadcrumbs">
                <li class="nav-home">
                  <a href="/admin/dashboard">
                    <i class="icon-home"></i>
                  </a>
                </li>
                <li class="separator">
                  <i class="icon-arrow-right"></i>
                </li>
                <li class="nav-item">
                  <p>Offers and Coupons</p>
                </li>
              </ul>
            </div>

            <!-- <div class="container container-card">
              <% if (coupons && coupons.length > 0) { %>
              <% coupons.forEach((coupon) => { %>
                <div class="col-md-4">
                <div class="four columns">
                    <a href="#">
                    <div class="content-box color-effect-1">
                      <div class="box-icon-wrap box-icon-effect-1 box-icon-effect-1a">
                        <div class="box-icon"><i class="fa fa-ticket"></i></div>
                      </div>
                      <h3><%= coupon.code %></h3>
                      <p><%= coupon.description %></p>
                    </div>
                    </a>
                  </div>
                </div>
              <% }) %>
              <% } else { %>
                <p>No created coupons</p>
              <% } %>
              </div>	 -->


              <div class="coupons">
                <div class="offers-container d-flex align-items-center justify-content-between">
                  <h5 class="text-muted my-3">Coupons</h5>
                  <a href="/admin/createCoupon"><button class="btn btn-primary text-white addCategoryBtn my-3">Create Coupon</button></a>
                </div>
                <div class="coupon-cards-container">
                    <% if (coupons && coupons.length > 0) { %>
                        <% coupons.forEach((coupon) => { %>
                            <div class="card p-3">
                                <div class="card-body">
                                    <i class="fa-solid fa-ticket py-2" style="font-size: 40px;"></i>
                                    <h5 style="font-weight: bold;"><%= coupon.code %></h5>
                                    <p class="card-text"><%= coupon.description %></p>
                                    <p class="card-text" style="font-size: 12px;">
                                        <strong>Validity:</strong> <%= coupon.validity.toDateString() %> <br>
                                        <strong>Min Purchase:</strong> <%= coupon.minPurchase %> <br>
                                        <strong>Max Amount:</strong> <%= coupon.maxAmount %>
                                    </p>
                                </div>
                                <div class="btns d-flex justify-content-center">
                                    <button class="btn border-secondary mx-1 edit-btn" data-toggle="modal" data-target="#editModal" data-coupon='<%= JSON.stringify(coupon) %>'>Edit</button>
                                    <button class="btn border-secondary mx-1" data-toggle="modal" data-target="#deleteModal<%= coupon._id %>">Delete</button>
                                </div>
                            </div>
                        <% }) %>
                    <% } else { %>
                        <p>No created coupons</p>
                    <% } %>
                </div>

                <!-- Offers-section -->
<div class="offers-container d-flex align-items-center justify-content-between">
  <h5 class="text-muted my-3">Offers</h5>
  <div class="dropdown">
    <button class="btn btn-primary text-white addCategoryBtn my-3 dropdown-toggle" id="createOfferBtn">Create Offer</button>
    <div class="dropdown-menu" id="offerOptions" style="display: none;">
      <a href="/admin/createProductOffer"><button class="dropdown-item">Create Product Offer</button></a>
      <a href="/admin/createCategoryOffer"><button class="dropdown-item">Create Category Offer</button></a>
    </div>
  </div>
</div>
<div class="coupon-cards-container">
  <% if (offers && offers.length > 0) { %>
      <% offers.forEach((offer) => { %>
          <div class="card p-3">
              <div class="card-body">
                  <p class="px-3" style="color: #fff; background-color: <%= offer.isActive ? '#1c7b4b' : '#b90a0a' %>; border-radius: 30px; font-size: 10px;"><%= offer.isActive ? 'Active' : 'Inactive' %></p>
                  <i class="fa-solid fa-tag py-2 pb-3" style="font-size: 40px;"></i>
                  <h5 style="font-weight: bold;"><%= offer.name %></h5>
                  <p class="card-text" style="font-size: 12px;">
                      <strong>Offer Type:</strong> <%= offer.type %> <br>
                      <strong><button class="btn border-secondary mx-1 items-btn" data-toggle="modal" data-target="#offerItemsModal<%= offer._id %>" style="border: none; color: blue;">View offer items</button></strong> <br>
                      <strong>Discount Rate:</strong> <%= offer.discount %>% <br>
                  </p>
              </div>
              <div class="btns d-flex justify-content-center">
                  <button class="btn border-secondary mx-1 offer-edit-btn" data-toggle="modal" data-target="#offerEditModal" data-offer='<%= JSON.stringify(offer) %>'>Edit</button>
                  <button class="btn border-secondary mx-1 toggle-status-btn" data-offer-id="<%= offer._id %>" data-status="<%= offer.isActive %>">
                    <%= offer.isActive ? 'Deactivate' : 'Activate' %>
                  </button>
              </div>
          </div>
      <% }) %>
  <% } else { %>
      <p>No created offers</p>
  <% } %>
</div>

            </div>
            <% if (offers && offers.length > 0) { %>
              <% offers.forEach((offer) => { %>
                <!-- Offer Items Modal -->
                <div class="modal fade" id="offerItemsModal<%= offer._id %>" tabindex="-1" aria-labelledby="offerItemsModalLabel" aria-hidden="true">
                  <div class="modal-dialog modal-dialog-centered modal-sm">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="offerItemsModalLabel">Offer Items</h5>
                        <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
                      </div>
                      <div class="modal-body">
                        <ul id="offerItemsList" class="list-group">
                          <h5 class="py-2"><strong><%= offer.type %>:</strong></h5>
                          <% offer.item.forEach((element, index) => { %>
                            <p><%= index + 1 + '. ' + element.name %></p>
                          <% }) %>
                        </ul>
                      </div>
                    </div>
                  </div>
                </div>
              <% }) %>
            <% } %>

            <!-- delete confirmation -->
            <% coupons.forEach((coupon, index) => { %>
              <div class="modal fade" id="deleteModal<%= coupon._id %>" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel<%= coupon._id %>" aria-hidden="true">
                  <div class="modal-dialog" role="document">
                      <div class="modal-content">
                          <div class="modal-header">
                              <h5 class="modal-title" id="deleteModalLabel<%= coupon._id %>">Delete Address</h5>
                              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                  <span aria-hidden="true">&times;</span>
                              </button>
                          </div>
                          <div class="modal-body p-3">
                              Are you sure you want to delete this coupon?
                          </div>
                          <div class="modal-footer">
                              <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                              <form class="delete-coupon-form" data-coupon-id="<%= coupon._id %>">
                                  <button type="submit" class="btn btn-danger">Delete</button>
                              </form>
                          </div>
                      </div>
                  </div>
              </div>
              <% }); %>
              <!-- ///////end-coupon-container////////// -->

            <!-- Edit Coupon Modal -->
            <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
              <div class="modal-dialog" role="document">
                  <div class="modal-content">
                      <div class="modal-header">
                          <h5 class="modal-title" id="editModalLabel">Edit Coupon</h5>
                          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                              <span aria-hidden="true">&times;</span>
                          </button>
                      </div>
                      <div class="modal-body">
                          <form id="editCouponForm" class="form-vertical">
                            <input type="hidden" name="couponId" id="couponId">
                              <div class="form-group">
                                  <label for="editCouponCode" class="errorMsg">Coupon Code</label>
                                  <input id="editCouponCode" name="couponCode" class="form-control" type="text">
                              </div>
                              <div class="form-group">
                                  <label for="editDiscount" class="errorMsg">Discount</label>
                                  <input id="editDiscount" name="discount" class="form-control" type="text">
                              </div>
                              <div class="form-group">
                                  <label for="editDescription" class="errorMsg">Description</label>
                                  <textarea id="editDescription" name="description" class="form-control" type="text"></textarea>
                              </div>
                              <div class="form-group">
                                  <label for="editMinPurchase" class="errorMsg">Minimum Purchase</label>
                                  <input id="editMinPurchase" name="minPurchase" class="form-control" type="text">
                              </div>
                              <div class="form-group">
                                  <label for="editMaxAmount" class="errorMsg">Maximum Discount</label>
                                  <input id="editMaxAmount" name="maxAmount" class="form-control" type="text">
                              </div>
                              <div class="form-group">
                                  <label for="editValidity" class="errorMsg">Validity</label>
                                  <input id="editValidity" name="validity" class="form-control" type="date">
                              </div>
                              <button type="submit" id="editCouponBtn" class="btn btn-primary">Submit</button>
                              <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                          </form>
                      </div>
                  </div>
              </div>
            </div>

<!-- Edit Offer Modal -->
<div class="modal fade" id="offerEditModal" tabindex="-1" role="dialog" aria-labelledby="offerEditModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
      <div class="modal-content">
          <div class="modal-header">
              <h5 class="modal-title" id="offerEditModalLabel">Edit Offer</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
              </button>
          </div>
          <div class="modal-body">
              <form id="editOfferForm" class="form-vertical">
                  <input type="hidden" name="offerId" id="editOfferId">
                  <div class="form-group">
                      <label for="editOfferName" class="errorMsg">Name</label>
                      <input id="editOfferName" name="offerName" class="form-control" type="text">
                  </div>
                  <div class="form-group">
                      <label for="editOfferDiscount" class="errorMsg">Discount</label>
                      <input id="editOfferDiscount" name="discount" class="form-control" type="text">
                  </div>

                  <input type="hidden" id="offerType">
                  
                  <div class="form-group" id="editItemRow">
                      <label for="editItem" class="errorMsg">Items</label>
                      <select id="editItem" name="item" class="form-control" multiple>
                          <!-- Options will be dynamically added here -->
                      </select>
                  </div>
                  <button type="submit" id="editOfferBtn" class="btn btn-primary">Submit</button>
                  <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
              </form>
          </div>
      </div>
  </div>
</div>


          </div>
        </div>

        <footer class="footer">
          <div class="container-fluid d-flex justify-content-between">
            <nav class="pull-left">
              <ul class="nav">
                <li class="nav-item">
                </li>
              </ul>
            </nav>
            <!-- <div class="copyright">
              2024, made with <i class="fa fa-heart heart text-danger"></i> by
              <a href="http://www.themekita.com">ThemeKita</a>
            </div>
            <div>
              Distributed by
              <a target="_blank" href="https://themewagon.com/">ThemeWagon</a>.
            </div> -->
          </div>
        </footer>
      </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
          const createOfferBtn = document.getElementById('createOfferBtn');
          const offerOptions = document.getElementById('offerOptions');

          createOfferBtn.addEventListener('click', () => {
              const isVisible = offerOptions.style.display === 'block';
              offerOptions.style.display = isVisible ? 'none' : 'block';
          });

          // Hide dropdown when clicking outside of it
          document.addEventListener('click', function(event) {
              if (!createOfferBtn.contains(event.target) && !offerOptions.contains(event.target)) {
                  offerOptions.style.display = 'none';
              }
          });
      });
    </script>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
      
          // Initialize Choices.js
          let editItemSelect = new Choices('#editItem', {
              removeItemButton: true,
              searchEnabled: true,
              shouldSort: false
          });
      
          const products = <%- JSON.stringify(products) %>;
          const categories = <%- JSON.stringify(categories) %>;
      
          // edit offer click event
          $('.offer-edit-btn').on('click', function() {
              const offer = $(this).data('offer');
              console.log('offer: ', offer);
              
              // Populating offer details
              $('#editOfferId').val(offer._id);
              $('#editOfferName').val(offer.name);
              $('#editOfferDiscount').val(offer.discount);
              $('#offerType').val(offer.type);
      
              const offerTypeValue = offer.type;
      
              // Clear existing choices
              editItemSelect.clearStore();
      
              let itemsToPopulate = [];
      
              // Items to populate based on offer type
              if (offerTypeValue === 'products') {
                  itemsToPopulate = products.map(product => ({
                      value: product._id,
                      label: product.name,
                      selected: offer.item.some(item => item._id === product._id)
                  }));
              } else if (offerTypeValue === 'categories') {
                  itemsToPopulate = categories.map(category => ({
                      value: category._id,
                      label: category.name,
                      selected: offer.item.some(item => item._id === category._id)
                  }));
              }
      
              // Populate the dropdown with the items
              editItemSelect.setChoices(itemsToPopulate, 'value', 'label', false);
          });
      
          // Form submit event
          $('#editOfferForm').on('submit', function(e) {
              e.preventDefault();
              validateEditOffer();
          });
      
          // Set error message
          const setError = (element, message) => {
              const formGroup = element.parentElement;
              const errorDisplay = formGroup.querySelector('.errorMsg');
              errorDisplay.innerText = message;
              element.classList.add('error');
              errorDisplay.classList.add('error');
              element.classList.remove('success');
              errorDisplay.classList.remove('success');
          };
      
          // Set success message
          const setSuccess = (element, message) => {
              const formGroup = element.parentElement;
              const errorDisplay = formGroup.querySelector('.errorMsg');
              errorDisplay.innerText = message;
              element.classList.add('success');
              errorDisplay.classList.add('success');
              element.classList.remove('error');
              errorDisplay.classList.remove('error');
          };
      
          // Validate the offer form
          const validateEditOffer = async () => {
              const offerIdValue = document.getElementById('editOfferId').value;
              const offerNameValue = document.getElementById('editOfferName').value.trim();
              const discountValue = document.getElementById('editOfferDiscount').value.trim();
              const typeValue = document.getElementById('offerType').value;
              const itemValue = editItemSelect.getValue(true);
              
      
              let isValid = true;
      
              if (!offerNameValue) {
                  setError(document.getElementById('editOfferName'), "*Please enter the offer name");
                  isValid = false;
              } else {
                  setSuccess(document.getElementById('editOfferName'), "Name");
              }
      
              if (!discountValue) {
                  setError(document.getElementById('editOfferDiscount'), "*Please enter the discount rate");
                  isValid = false;
              } else {
                  setSuccess(document.getElementById('editOfferDiscount'), "Discount");
              }
      
              if (isValid) {
                  try {
                      const response = await fetch(`/admin/editOffer/${offerIdValue}`, {
                          method: "PUT",
                          headers: {
                              'content-type': 'application/json'
                          },
                          body: JSON.stringify({
                              offerName: offerNameValue,
                              discount: discountValue,
                              type: typeValue,
                              items: itemValue
                          })
                      });
      
                      const data = await response.json();
      
                      if (data.success) {
                          Swal.fire({
                              icon: 'success',
                              title: 'Success',
                              text: 'Offer updated!'
                          }).then(() => {
                              window.location.href = "/admin/offersAndCoupons";
                          });
                      } else {
                          Swal.fire({
                              icon: 'error',
                              title: 'Error',
                              text: 'Something went wrong'
                          });
                          window.location.href = "/admin/offersAndCoupons";
                      }
                  } catch (error) {
                      Swal.fire({
                          icon: 'error',
                          title: 'Error',
                          text: 'Failed to update offer'
                      });
                  }
              }
          };
      });
      </script>

    <!-- Offer status toggle -->
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('.toggle-status-btn').forEach(button => {
          button.addEventListener('click', async (event) => {
            const button = event.currentTarget;
            const offerId = button.getAttribute('data-offer-id');
            const currentStatus = button.getAttribute('data-status') === 'true';
      
              const response = await fetch(`/admin/offerStatusToggle/${offerId}`, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({ isActive: !currentStatus }),
              });

              const toggleData = response.json();
      
              if (response.ok) {
                Swal.fire({
                  icon: 'success',
                  title: 'Success',
                  text: 'Status updated!'
                }).then(()=> {
                  button.classList.toggle('btn-success', !currentStatus);
                  button.classList.toggle('btn-danger', currentStatus);
                  location.reload();
                });
              } else {
                Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: toggleData.message || 'Error updating status!'
                });
              }
          });
        });
      });
      </script>
    <!-- ----- -->

    <script>
      document.querySelectorAll('.delete-coupon-form').forEach(form => {
            form.addEventListener('submit', async (event) => {
            event.preventDefault();

            const couponId = form.getAttribute('data-coupon-id');
            const response = await fetch (`/admin/deleteCoupon/${couponId}`, {
                method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    },
            });

            const data = await response.json();

            if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Coupon deleted'
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to delete the coupon.'
                    });
            }
        })
        });
    </script>

    <script>
      $(document).ready(function () {
          $('.edit-btn').on('click', function () {
              const coupon = $(this).data('coupon');
              $('#couponId').val(coupon._id);
              $('#editCouponCode').val(coupon.code);
              $('#editDiscount').val(coupon.discount);
              $('#editDescription').val(coupon.description);
              $('#editMinPurchase').val(coupon.minPurchase);
              $('#editMaxAmount').val(coupon.maxAmount);
              $('#editValidity').val(new Date(coupon.validity).toISOString().substring(0, 10));
          });

            const couponId = document.getElementById('couponId');
            const couponCode = document.getElementById('editCouponCode');
            const discount = document.getElementById('editDiscount');
            const description = document.getElementById('editDescription');
            const minPurchase = document.getElementById('editMinPurchase');
            const maxAmount = document.getElementById('editMaxAmount');
            const validity = document.getElementById('editValidity');
  
          $('#editCouponForm').on('submit', function (e) {
              e.preventDefault();

              validateEditCoupon();
          });

          const setError = (element, message) => {
          const formGroup = element.parentElement;
          const errorDisplay = formGroup.querySelector('.errorMsg');
      

          errorDisplay.innerText = message;
          element.classList.add('error');
          errorDisplay.classList.add('error');
          element.classList.remove('success');
          errorDisplay.classList.remove('success');

          }; 

          const setSuccess = (element, message) => {
              const formGroup = element.parentElement;
              const errorDisplay = formGroup.querySelector('.errorMsg');

          errorDisplay.innerText = message;
          element.classList.add('success');
          errorDisplay.classList.add('success');
          element.classList.remove('error');
          errorDisplay.classList.remove('error');

          };

          const validateEditCoupon = async () => {
            const couponIdValue = couponId.value;
            const couponCodeValue = couponCode.value.trim();
            const discountValue = discount.value.trim();
            const descriptionValue = description.value.trim();
            const minPurchaseValue = minPurchase.value.trim();
            const maxAmountValue = maxAmount.value.trim();
            const validityValue = validity.value.trim();

            let isValid = true;

            if(!couponCodeValue) {
                setError(couponCode, "*Please enter the coupon code");
                isValid = false;
            }
            else {
                setSuccess(couponCode, "Coupon Code");
            }

            if(!discountValue) {
                setError(discount, "*Please enter the discount rate");
                isValid = false;
            } else if (discountValue < 1 || discountValue > 100) {
              setError(discount, "*Enter a discount rate between 1-100");
                isValid = false;
            } else if (isNaN(discountValue)) {
              setError(discount, "*Enter a valid discount rate");
                isValid = false;
            }
            else {
                setSuccess(discount, "Discount");
            }

            if(!descriptionValue) {
                setError(description, "*Please enter the description");
                isValid = false;
            }
            else {
                setSuccess(description, "Description");
            }

            if(!minPurchaseValue) {
                setError(minPurchase, "*Enter the minimum purchase");
                isValid = false;
            } else if (isNaN(minPurchaseValue) || minPurchaseValue < 0) {
              setError(minPurchase, "*Enter a valid minimum purchase amount");
                isValid = false;
            } else {
                setSuccess(minPurchase, "Minimum Purchase");
            }

            if(!maxAmountValue) {
                setError(maxAmount, "*Enter the maximum discount");
                isValid = false;
            } else if(isNaN(maxAmountValue) || maxAmountValue < 0) {
                setError(maxAmount, "*Enter a valid maximum amount");
                isValid = false;
            }
            else {
                setSuccess(maxAmount, "Maximum Discount");
            }

            if(!validityValue) {
                setError(validity, "*Enter the validity");
                isValid = false;
            }
            else {
                setSuccess(validity, "Validity");
            }

            if(!isValid) {
              return;
            }

            const response = await fetch(`/admin/editCoupon/${couponIdValue}`, {
                    method: "PUT",
                    headers: {
                        'content-type': 'application/json'
                    },
                    body: JSON.stringify({
                      couponCode: couponCodeValue,
                      discount: discountValue,
                      description: descriptionValue,
                      minPurchase: minPurchaseValue,
                      maxAmount: maxAmountValue,
                      validity: validityValue,
                    })
                });

                const data = await response.json();

                if(data.success) {
                  const formGroup = couponCode.parentElement;
                  const errorDisplay = formGroup.querySelector('.errorMsg');

                  errorDisplay.innerText = 'Coupon Code';
                  couponCode.classList.add('success');
                  errorDisplay.classList.add('success');
                  couponCode.classList.remove('error');
                  errorDisplay.classList.remove('error');

                  Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: 'Coupon updated!'
                  }).then(() => {
                    window.location.href = "/admin/offersAndCoupons";
                  });
                } else if(data.exist) {
                  const formGroup = couponCode.parentElement;
                  const errorDisplay = formGroup.querySelector('.errorMsg');

                  errorDisplay.innerText = 'Code already exists!';
                  couponCode.classList.add('error');
                  errorDisplay.classList.add('error');
                  couponCode.classList.remove('success');
                  errorDisplay.classList.remove('success');
                }
                else {
                  Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Something went wrong'
                  });
                  window.location.href = "/admin/offersAndCoupons";
                }
          }
      });
  </script>

    <!-- Multi-select method -->
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>

    <!-- Sweet Alert -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!--   Core JS Files   -->
    <script src="/assets2/js/core/jquery-3.7.1.min.js"></script>
    <script src="/assets2/js/core/popper.min.js"></script>
    <script src="/assets2/js/core/bootstrap.min.js"></script>
    <!-- jQuery Scrollbar -->
    <script src="/assets2/js/plugin/jquery-scrollbar/jquery.scrollbar.min.js"></script>
    <!-- Chart JS -->
    <script src="/assets2/js/plugin/chart.js/chart.min.js"></script>
    <!-- jQuery Sparkline -->
    <script src="/assets2/js/plugin/jquery.sparkline/jquery.sparkline.min.js"></script>
    <!-- Chart Circle -->
    <!-- Datatables -->
    <script src="/assets2/js/plugin/datatables/datatables.min.js"></script>
    <!-- Bootstrap Notify -->
    <script src="/assets2/js/plugin/bootstrap-notify/bootstrap-notify.min.js"></script>
    <!-- jQuery Vector Maps -->
    <script src="/assets2/js/plugin/jsvectormap/jsvectormap.min.js"></script>
    <script src="/assets2/js/plugin/jsvectormap/world.js"></script>
    <!-- Google Maps Plugin -->
    <script src="/assets2/js/plugin/gmaps/gmaps.js"></script>
    <!-- Sweet Alert -->
    <script src="/assets2/js/plugin/sweetalert/sweetalert.min.js"></script>
    <!-- Kaiadmin JS -->
    <script src="/assets2/js/kaiadmin.min.js"></script>
    <!-- Sweet Alert -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    
  </body>
</html>